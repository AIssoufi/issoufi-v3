[{"/Users/adam/Documents/Sources/issoufi-v3/src/index.js":"1","/Users/adam/Documents/Sources/issoufi-v3/src/App.js":"2","/Users/adam/Documents/Sources/issoufi-v3/src/reportWebVitals.js":"3","/Users/adam/Documents/Sources/issoufi-v3/src/pages/index.js":"4","/Users/adam/Documents/Sources/issoufi-v3/src/pages/Home.js":"5","/Users/adam/Documents/Sources/issoufi-v3/src/pages/Experiences.js":"6","/Users/adam/Documents/Sources/issoufi-v3/src/pages/Skills.js":"7","/Users/adam/Documents/Sources/issoufi-v3/src/pages/Projects.js":"8","/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Header/index.js":"9","/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Header/Header.js":"10","/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Project/index.js":"11","/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Project/Project.js":"12","/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Experience/index.js":"13","/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Experience/Experience.js":"14","/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Skill/index.js":"15","/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Skill/Skill.js":"16"},{"size":547,"mtime":1611822658088,"results":"17","hashOfConfig":"18"},{"size":785,"mtime":1611823333830,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1611778356855,"results":"20","hashOfConfig":"18"},{"size":194,"mtime":1611781194048,"results":"21","hashOfConfig":"18"},{"size":635,"mtime":1611843956489,"results":"22","hashOfConfig":"18"},{"size":5314,"mtime":1611932644772,"results":"23","hashOfConfig":"18"},{"size":2441,"mtime":1611952352187,"results":"24","hashOfConfig":"18"},{"size":2663,"mtime":1611862721891,"results":"25","hashOfConfig":"18"},{"size":36,"mtime":1611851819957,"results":"26","hashOfConfig":"18"},{"size":906,"mtime":1611830076693,"results":"27","hashOfConfig":"18"},{"size":37,"mtime":1611851846863,"results":"28","hashOfConfig":"18"},{"size":2839,"mtime":1611956321738,"results":"29","hashOfConfig":"18"},{"size":40,"mtime":1611919843257,"results":"30","hashOfConfig":"18"},{"size":2346,"mtime":1611933754847,"results":"31","hashOfConfig":"18"},{"size":35,"mtime":1611944580178,"results":"32","hashOfConfig":"18"},{"size":1801,"mtime":1611951971527,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1kp79a0",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"/Users/adam/Documents/Sources/issoufi-v3/src/index.js",[],["70","71"],"/Users/adam/Documents/Sources/issoufi-v3/src/App.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/reportWebVitals.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/pages/index.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/pages/Home.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/pages/Experiences.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/pages/Skills.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/pages/Projects.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Header/index.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Header/Header.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Project/index.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Project/Project.js",["72"],"// Dependencies\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// SVG\nimport { ReactComponent as PreviousIcon } from './icons/previous.svg';\nimport { ReactComponent as NextIcon } from './icons/next.svg';\nimport { ReactComponent as LikeIcon } from './icons/heart.svg';\n\n// Style\nimport './Project.css';\n\nconst Project = ({ title, projects }) => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [displayAllPages, setDisplayAllPages] = useState(false);\n  const step =  3;\n\n  const handleNextPage = () => {\n    const nextPage = currentPage + step;\n    setCurrentPage(nextPage >= projects.length ? step : nextPage);\n  }\n\n  const handlePreviousPage = () => {\n    const previousPage = currentPage - step;\n    setCurrentPage((previousPage <= 0) ? 0 : previousPage);\n  }\n\n  const handleDisplayAllPage = () => {\n    setDisplayAllPages(!displayAllPages)\n  }\n\n  return (\n    <section className=\"project-comp\">\n      <header>\n        <h1 className=\"title\">{title}</h1>\n        <nav className=\"nav-ctrl\">\n          <button\n            className=\"ctrl-item\"\n            onClick={handleDisplayAllPage}\n          >\n            {displayAllPages ? \"Afficher moins\" : `Tout afficher (${projects.length})`}\n          </button>\n          {displayAllPages ? null : <PreviousIcon\n            className=\"ctrl-item\"\n            onClick={handlePreviousPage}\n          />}\n          {displayAllPages ? null : <NextIcon\n            className=\"ctrl-item\"\n            onClick={handleNextPage}\n          />}\n        </nav>\n      </header>\n      <main className={displayAllPages ? \"display-all\" : ''}>\n      {\n        (displayAllPages ?\n          projects :\n          projects.slice(currentPage, currentPage + step)\n        ).map(({\n          id, name, type, imageUrl, tools, likeCount, isLikedByOwnUser\n        }) => (\n          <div key={id} className=\"project-item\">\n            <header className=\"image-container\">\n              <img className=\"\" src={imageUrl} />\n              <div className=\"like-container\">\n                <span className=\"counter\">{likeCount}</span>\n                <LikeIcon className={`like ${isLikedByOwnUser ? 'isLiked' : ''}`} />\n              </div>\n            </header>\n            <main>\n              <div className=\"name\">{name}</div>\n              <div className=\"type\">{type}</div>\n              <div className=\"tools\">{tools.join(' · ')}</div>\n            </main>\n          </div>\n        ))\n      }\n      </main>\n    </section>\n  );\n};\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  projects: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    imageUrl: PropTypes.string,\n    tools: PropTypes.arrayOf(PropTypes.string)\n  }))\n};\n\nProject.defaultProps = {\n  projects: []\n};\n\nexport default Project;\n","/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Experience/index.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Experience/Experience.js",["73","74"],"// Dependencies\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Style\nimport './Experience.css';\n\nconst Experience = ({\n  jobName, entityName, entityLogoUrl, contratType, city, startDate, endDate, duration, children\n}) => {\n  return (\n    <article className=\"exp-comp\">\n      <header className=\"summary\">\n        <img className=\"entity-logo\" src={entityLogoUrl} />\n        <div className=\"job-summary\">\n          <h2 className='job-name'>{jobName}</h2>\n          <div className='job-details'>{`${entityName} · ${contratType} · ${city}`}</div>\n          <div className='job-duration'>{`${startDate} – ${endDate} · ${duration}`}</div>\n        </div>\n      </header>\n      <main className=\"details\">{children}</main>\n    </article>\n  );\n};\n\nExperience.propTypes = {\n  children: PropTypes.oneOfType(\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element)\n  ),\n  jobName: PropTypes.string,\n  entityName: PropTypes.string,\n  entityLogoUrl: PropTypes.string,\n  contratType: PropTypes.string,\n  city: PropTypes.string,\n  startDate: PropTypes.string,\n  endDate: PropTypes.string,\n  duration: PropTypes.string\n};\n\nconst Technologies = ({ technologies }) => (\n  <footer className=\"exp-technologies\">\n    <div className='title'>Technologies que j’utilise</div>\n    {technologies.slice(0, technologies.length - 1).join(', ')} et {technologies[technologies.length - 1]}\n  </footer>\n);\n\nTechnologies.propTypes = {\n  technologies: PropTypes.arrayOf(PropTypes.string)\n};\n\nTechnologies.defaultProps = {\n  technologies: []\n};\n\nExperience.Technologies = Technologies;\n\nconst Project = ({ title, state, technologies, children }) => (\n  <div className=\"exp-project\">\n    <header>\n      <h3 className=\"title\">{title}&nbsp;</h3>\n      {state ? <span className=\"state\">· {state}</span> : null}\n    </header>\n    <main className=\"description\">{children}</main>\n    {technologies.length > 0 ? <Technologies technologies={technologies} /> : null}\n  </div>\n);\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  state: PropTypes.string,\n  technologies: PropTypes.arrayOf(PropTypes.string),\n  children: PropTypes.oneOfType(\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element)\n  )\n};\n\nProject.defaultProps = {\n  technologies: [],\n  state: ''\n};\n\nExperience.Project = Project;\n\nexport default Experience;\n","/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Skill/index.js",[],"/Users/adam/Documents/Sources/issoufi-v3/src/shared-components/Skill/Skill.js",[],["75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":63,"column":15,"nodeType":"83","endLine":63,"endColumn":50},{"ruleId":"84","severity":1,"message":"85","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":14,"column":9,"nodeType":"83","endLine":14,"endColumn":60},{"ruleId":"77","replacedBy":"88"},{"ruleId":"79","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["90"],["91"],"no-global-assign","no-unsafe-negation"]